{"ast":null,"code":"import { first, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CoursesService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.API = '/assets/courses.json';\n  }\n  list() {\n    return this.httpClient.get(this.API).pipe(first(),\n    // fazer a requisição uma vez e fechar conexão\n    tap(courses => console.log(courses)));\n  }\n}\nCoursesService.ɵfac = function CoursesService_Factory(t) {\n  return new (t || CoursesService)(i0.ɵɵinject(i1.HttpClient));\n};\nCoursesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CoursesService,\n  factory: CoursesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,KAAK,EAAEC,GAAG,QAAQ,gBAAgB;;;AAO3C,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAFb,QAAG,GAAI,sBAAsB;EAEA;EAE9CC,IAAI;IACF,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAW,IAAI,CAACC,GAAG,CAAC,CAC7CC,IAAI,CACHR,KAAK,EAAE;IAAE;IACTC,GAAG,CAACQ,OAAO,IAAIC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC,CAAC,CACrC;EACH;;AAZWP,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAU,SAAdV,cAAc;EAAAW,YAFb;AAAM","names":["first","tap","CoursesService","constructor","httpClient","list","get","API","pipe","courses","console","log","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\rodri\\OneDrive\\Área de Trabalho\\Documentos Rodrigo\\crud-angular-spring\\crud-angular\\src\\app\\courses\\service\\courses.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { first, tap } from 'rxjs/operators';\n\nimport { Course } from '../model/course';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoursesService {\n\n  private readonly API =  '/assets/courses.json';\n\n  constructor(private httpClient: HttpClient) { }\n\n  list() {\n    return this.httpClient.get<Course[]>(this.API)\n    .pipe(\n      first(), // fazer a requisição uma vez e fechar conexão\n      tap(courses => console.log(courses))\n    )\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}