{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class CategoryPipe {\n  transform(value) {\n    /* switch(value) {\r\n       case 'front-end': return 'code';\r\n       case 'back-end': return 'computer';\r\n     }\r\n     return 'code';\r\n    }\r\n        }\r\n     \r\n    }\r\n    static { this.ɵfac = function CategoryPipe_Factory(t) { return new (t || CategoryPipe)(); }; }\r\n    static { this.ɵpipe = /*@__PURE__*/\n    i0.ɵɵdefinePipe({\n      name: \"category\",\n      type: CategoryPipe,\n      pure: true\n    });\n  }\n}","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,YAAY;EAEvBC,SAAS,CAACC,KAAa;IACtB;;;;;;;;;;;;;YAHUF,YAAY;MAAAG;IAAA;EAAA","names":["CategoryPipe","transform","value","pure"],"sourceRoot":"","sources":["C:\\Users\\rodri\\OneDrive\\Área de Trabalho\\Documentos Rodrigo\\crud-angular-spring\\crud-angular\\src\\app\\shared\\pipes\\category.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'category'\n})\nexport class CategoryPipe implements PipeTransform {\n\n  transform(value: string): string {\n   /* switch(value) {\n      case 'front-end': return 'code';\n      case 'back-end': return 'computer';\n    }\n    return 'code';\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}